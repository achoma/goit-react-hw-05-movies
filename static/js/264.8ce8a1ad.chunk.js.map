{"version":3,"file":"static/js/264.8ce8a1ad.chunk.js","mappings":"iPAOMA,EAASC,EAAAA,GAAAA,GAASC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,oJAQlBC,EAAQH,EAAAA,GAAAA,GAASI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,mFAMjBG,EAAUL,EAAAA,GAAAA,IAAUM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,+EA0C1B,UApCa,WACX,IAAQK,GAAYC,EAAAA,EAAAA,MAAZD,QACRE,GAA4BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAjCI,EAAQF,EAAA,GAAEG,EAAOH,EAAA,IAExBI,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAC,EAAA,OAAAF,IAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAESC,EAAAA,EAAAA,IAAgB,UAADC,OAAWnB,EAAO,aAAY,KAAD,EAA7Dc,EAAQC,EAAAK,KACdb,EAAQO,EAASO,KAAKC,MAAMP,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAQ,GAAAR,EAAA,SAE5BS,QAAQC,MAAM,kCAAiCV,EAAAQ,IAAS,yBAAAR,EAAAW,OAAA,GAAAb,EAAA,kBAE3D,kBAPc,OAAAH,EAAAiB,MAAA,KAAAC,UAAA,KASfnB,GACF,GAAG,CAACT,IACJwB,QAAQK,IAAIvB,GAiBZ,OAAOwB,EAAAA,EAAAA,KAACtC,EAAM,CAAAuC,SAdLzB,EAAS0B,KAAI,SAAAV,GAAI,OACtBW,EAAAA,EAAAA,MAACrC,EAAK,CAAAmC,SAAA,EACJD,EAAAA,EAAAA,KAAA,OACEI,IAAG,kCAAAf,OAAoCG,EAAKa,cAC5CC,IAAG,GAAAjB,OAAKG,EAAKe,KAAI,iBAEnBJ,EAAAA,EAAAA,MAACnC,EAAO,CAAAiC,SAAA,EACND,EAAAA,EAAAA,KAAA,KAAAC,SAAIT,EAAKe,QACTJ,EAAAA,EAAAA,MAAA,KAAAF,SAAA,CAAG,MAAIT,EAAKgB,kBAPJhB,EAAKiB,QAST,KAKd,C","sources":["components/cast/cast.js"],"sourcesContent":["//tutaj ma się stworzyć strona filmu znalezionego po id\n\nimport { axiosConfig } from 'components/axios/axiosconfig';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst GridUl = styled.ul`\n  list-style: none;\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\n  gap: 20px;\n  padding: 0 20px;\n`;\n\nconst Actor = styled.li`\n  display: flex;\n  flex-direction: column;\n  border: 1px solid black;\n`;\n\nconst DivFlex = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [castInfo, setCast] = useState([]);\n\n  useEffect(() => {\n    const fetchCast = async () => {\n      try {\n        const response = await axiosConfig.get(`/movie/${movieId}/credits`);\n        setCast(response.data.cast);\n      } catch (error) {\n        console.error('Error fetching trending movies:', error);\n      }\n    };\n\n    fetchCast();\n  }, [movieId]);\n  console.log(castInfo);\n\n  const createList = () => {\n    return castInfo.map(cast => (\n      <Actor key={cast.cast_id}>\n        <img\n          src={`https://image.tmdb.org/t/p/w200${cast.profile_path}`}\n          alt={`${cast.name}'s profile`}\n        />\n        <DivFlex>\n          <p>{cast.name}</p>\n          <p>as {cast.character}</p>\n        </DivFlex>\n      </Actor>\n    ));\n  };\n\n  return <GridUl>{createList()}</GridUl>;\n};\n\nexport default Cast;\n"],"names":["GridUl","styled","_templateObject","_taggedTemplateLiteral","Actor","_templateObject2","DivFlex","_templateObject3","movieId","useParams","_useState","useState","_useState2","_slicedToArray","castInfo","setCast","useEffect","fetchCast","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","axiosConfig","concat","sent","data","cast","t0","console","error","stop","apply","arguments","log","_jsx","children","map","_jsxs","src","profile_path","alt","name","character","cast_id"],"sourceRoot":""}